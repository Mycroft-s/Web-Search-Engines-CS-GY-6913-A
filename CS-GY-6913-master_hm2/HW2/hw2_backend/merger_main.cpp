#include <string>
#include <vector>
#include <fstream>
#include <iostream>

void mergeInvertedIndexes(const std::vector<std::string>& indexFiles, const std::string& outputIndexFile, const std::string& outputLexiconFile);

int main() {
    std::string tempFilePrefix = "tmp/temp_postings_";
    std::string outputIndexFile = "tmp/final_inverted_index.bin";
    std::string outputLexiconFile = "tmp/lexicon.txt";

    // Collect names of temporary files generated by the parser
    std::vector<std::string> tempFileNames;
    int tempFileIndex = 1;
    while (true) {
        std::string tempFileName = tempFilePrefix + std::to_string(tempFileIndex) + ".txt";
        std::ifstream infile(tempFileName);
        if (!infile.good()) {
            break;
        }
        tempFileNames.push_back(tempFileName);
        tempFileIndex++;
    }

    mergeInvertedIndexes(tempFileNames, outputIndexFile, outputLexiconFile);
    return 0;
}
